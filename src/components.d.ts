/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';

import {
  MatchResults,
} from '@stencil/router';

import {
  AppAbout as AppAbout
} from './pages/app-about/app-about';

declare global {
  interface HTMLAppAboutElement extends AppAbout, HTMLStencilElement {
  }
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };
  interface HTMLElementTagNameMap {
    "app-about": HTMLAppAboutElement;
  }
  interface ElementTagNameMap {
    "app-about": HTMLAppAboutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-about": JSXElements.AppAboutAttributes;
    }
  }
  namespace JSXElements {
    export interface AppAboutAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  AppBlog as AppBlog
} from './pages/app-blog/app-blog';

declare global {
  interface HTMLAppBlogElement extends AppBlog, HTMLStencilElement {
  }
  var HTMLAppBlogElement: {
    prototype: HTMLAppBlogElement;
    new (): HTMLAppBlogElement;
  };
  interface HTMLElementTagNameMap {
    "app-blog": HTMLAppBlogElement;
  }
  interface ElementTagNameMap {
    "app-blog": HTMLAppBlogElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-blog": JSXElements.AppBlogAttributes;
    }
  }
  namespace JSXElements {
    export interface AppBlogAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  AppContact as AppContact
} from './pages/app-contact/app-contact';

declare global {
  interface HTMLAppContactElement extends AppContact, HTMLStencilElement {
  }
  var HTMLAppContactElement: {
    prototype: HTMLAppContactElement;
    new (): HTMLAppContactElement;
  };
  interface HTMLElementTagNameMap {
    "app-contact": HTMLAppContactElement;
  }
  interface ElementTagNameMap {
    "app-contact": HTMLAppContactElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-contact": JSXElements.AppContactAttributes;
    }
  }
  namespace JSXElements {
    export interface AppContactAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  AppHome as AppHome
} from './pages/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLStencilElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  OpenForgeApp as OpenForgeApp
} from './pages/open-forge-app/open-forge-app';

declare global {
  interface HTMLOpenForgeAppElement extends OpenForgeApp, HTMLStencilElement {
  }
  var HTMLOpenForgeAppElement: {
    prototype: HTMLOpenForgeAppElement;
    new (): HTMLOpenForgeAppElement;
  };
  interface HTMLElementTagNameMap {
    "open-forge-app": HTMLOpenForgeAppElement;
  }
  interface ElementTagNameMap {
    "open-forge-app": HTMLOpenForgeAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "open-forge-app": JSXElements.OpenForgeAppAttributes;
    }
  }
  namespace JSXElements {
    export interface OpenForgeAppAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
