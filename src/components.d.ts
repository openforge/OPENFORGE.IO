/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  BlogPost,
} from './model/blog-post.model';
import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';

export namespace Components {
  interface AppAbout {}
  interface AppBlog {
    'butter': any;
  }
  interface AppBlogCard {
    'blogPost': BlogPost;
  }
  interface AppBlogContent {
    'blogPost': BlogPost;
  }
  interface AppBlogFeatured {
    'blogPost': BlogPost;
  }
  interface AppBlogIndex {
    'butter': any;
  }
  interface AppBlogPost {
    'butter': any;
    'history': RouterHistory;
    'match': MatchResults;
    'preRenderBlogPost': BlogPost;
  }
  interface AppCarouselIndicators {
    'activeIndex': string;
  }
  interface AppCaseStudy {}
  interface AppContact {
    'errorIconStyles': { display: string; marginBottom: string; paddingRight: string; };
  }
  interface AppCta {}
  interface AppDetailedService {
    'history': RouterHistory;
    'match': MatchResults;
  }
  interface AppFooter {}
  interface AppHome {
    'butter': any;
    'history': RouterHistory;
  }
  interface AppImg {
    'alt': string;
    'fit': boolean;
    'preLoad': boolean;
    'src': string;
  }
  interface AppInput {
    'id': string;
    'label': string;
    'maxlength': string;
    'name': string;
    'placeholder': string;
    'required': boolean;
    'type': string;
  }
  interface AppMembers {
    'members': any[];
  }
  interface AppNavHeader {}
  interface AppOpportunities {
    'errorIconStyles': { display: string; marginBottom: string; paddingRight: string; };
    'history': RouterHistory;
    'match': MatchResults;
  }
  interface AppRadio {
    'label': string;
    'name': string;
    'required': boolean;
    'value': string;
  }
  interface AppResources {
    'errorIconStyles': { display: string; marginBottom: string; paddingRight: string; };
    'history': RouterHistory;
    'match': MatchResults;
  }
  interface AppServiceLevelAgreement {}
  interface AppServices {}
  interface AppSlider {
    'label': string;
    'name': string;
  }
  interface AppTeamLanding {
    'history': RouterHistory;
    'match': MatchResults;
  }
  interface AppTextarea {
    'id': string;
    'label': string;
    'maxlength': string;
    'name': string;
    'placeholder': string;
    'required': boolean;
    'rows': number;
  }
  interface AppToolbox {}
  interface AppTos {}
  interface AppTranslate {
    'key': string;
    'params': {};
  }
  interface ContentGraphic {
    'imgUrl': string;
    'preLoadImg': boolean;
    'reverse': boolean;
  }
  interface LazyImg {
    'alt': string;
    'src': string;
    'width': number;
  }
  interface OpenForgeApp {}
}

declare global {


  interface HTMLAppAboutElement extends Components.AppAbout, HTMLStencilElement {}
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };

  interface HTMLAppBlogElement extends Components.AppBlog, HTMLStencilElement {}
  var HTMLAppBlogElement: {
    prototype: HTMLAppBlogElement;
    new (): HTMLAppBlogElement;
  };

  interface HTMLAppBlogCardElement extends Components.AppBlogCard, HTMLStencilElement {}
  var HTMLAppBlogCardElement: {
    prototype: HTMLAppBlogCardElement;
    new (): HTMLAppBlogCardElement;
  };

  interface HTMLAppBlogContentElement extends Components.AppBlogContent, HTMLStencilElement {}
  var HTMLAppBlogContentElement: {
    prototype: HTMLAppBlogContentElement;
    new (): HTMLAppBlogContentElement;
  };

  interface HTMLAppBlogFeaturedElement extends Components.AppBlogFeatured, HTMLStencilElement {}
  var HTMLAppBlogFeaturedElement: {
    prototype: HTMLAppBlogFeaturedElement;
    new (): HTMLAppBlogFeaturedElement;
  };

  interface HTMLAppBlogIndexElement extends Components.AppBlogIndex, HTMLStencilElement {}
  var HTMLAppBlogIndexElement: {
    prototype: HTMLAppBlogIndexElement;
    new (): HTMLAppBlogIndexElement;
  };

  interface HTMLAppBlogPostElement extends Components.AppBlogPost, HTMLStencilElement {}
  var HTMLAppBlogPostElement: {
    prototype: HTMLAppBlogPostElement;
    new (): HTMLAppBlogPostElement;
  };

  interface HTMLAppCarouselIndicatorsElement extends Components.AppCarouselIndicators, HTMLStencilElement {}
  var HTMLAppCarouselIndicatorsElement: {
    prototype: HTMLAppCarouselIndicatorsElement;
    new (): HTMLAppCarouselIndicatorsElement;
  };

  interface HTMLAppCaseStudyElement extends Components.AppCaseStudy, HTMLStencilElement {}
  var HTMLAppCaseStudyElement: {
    prototype: HTMLAppCaseStudyElement;
    new (): HTMLAppCaseStudyElement;
  };

  interface HTMLAppContactElement extends Components.AppContact, HTMLStencilElement {}
  var HTMLAppContactElement: {
    prototype: HTMLAppContactElement;
    new (): HTMLAppContactElement;
  };

  interface HTMLAppCtaElement extends Components.AppCta, HTMLStencilElement {}
  var HTMLAppCtaElement: {
    prototype: HTMLAppCtaElement;
    new (): HTMLAppCtaElement;
  };

  interface HTMLAppDetailedServiceElement extends Components.AppDetailedService, HTMLStencilElement {}
  var HTMLAppDetailedServiceElement: {
    prototype: HTMLAppDetailedServiceElement;
    new (): HTMLAppDetailedServiceElement;
  };

  interface HTMLAppFooterElement extends Components.AppFooter, HTMLStencilElement {}
  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };

  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppImgElement extends Components.AppImg, HTMLStencilElement {}
  var HTMLAppImgElement: {
    prototype: HTMLAppImgElement;
    new (): HTMLAppImgElement;
  };

  interface HTMLAppInputElement extends Components.AppInput, HTMLStencilElement {}
  var HTMLAppInputElement: {
    prototype: HTMLAppInputElement;
    new (): HTMLAppInputElement;
  };

  interface HTMLAppMembersElement extends Components.AppMembers, HTMLStencilElement {}
  var HTMLAppMembersElement: {
    prototype: HTMLAppMembersElement;
    new (): HTMLAppMembersElement;
  };

  interface HTMLAppNavHeaderElement extends Components.AppNavHeader, HTMLStencilElement {}
  var HTMLAppNavHeaderElement: {
    prototype: HTMLAppNavHeaderElement;
    new (): HTMLAppNavHeaderElement;
  };

  interface HTMLAppOpportunitiesElement extends Components.AppOpportunities, HTMLStencilElement {}
  var HTMLAppOpportunitiesElement: {
    prototype: HTMLAppOpportunitiesElement;
    new (): HTMLAppOpportunitiesElement;
  };

  interface HTMLAppRadioElement extends Components.AppRadio, HTMLStencilElement {}
  var HTMLAppRadioElement: {
    prototype: HTMLAppRadioElement;
    new (): HTMLAppRadioElement;
  };

  interface HTMLAppResourcesElement extends Components.AppResources, HTMLStencilElement {}
  var HTMLAppResourcesElement: {
    prototype: HTMLAppResourcesElement;
    new (): HTMLAppResourcesElement;
  };

  interface HTMLAppServiceLevelAgreementElement extends Components.AppServiceLevelAgreement, HTMLStencilElement {}
  var HTMLAppServiceLevelAgreementElement: {
    prototype: HTMLAppServiceLevelAgreementElement;
    new (): HTMLAppServiceLevelAgreementElement;
  };

  interface HTMLAppServicesElement extends Components.AppServices, HTMLStencilElement {}
  var HTMLAppServicesElement: {
    prototype: HTMLAppServicesElement;
    new (): HTMLAppServicesElement;
  };

  interface HTMLAppSliderElement extends Components.AppSlider, HTMLStencilElement {}
  var HTMLAppSliderElement: {
    prototype: HTMLAppSliderElement;
    new (): HTMLAppSliderElement;
  };

  interface HTMLAppTeamLandingElement extends Components.AppTeamLanding, HTMLStencilElement {}
  var HTMLAppTeamLandingElement: {
    prototype: HTMLAppTeamLandingElement;
    new (): HTMLAppTeamLandingElement;
  };

  interface HTMLAppTextareaElement extends Components.AppTextarea, HTMLStencilElement {}
  var HTMLAppTextareaElement: {
    prototype: HTMLAppTextareaElement;
    new (): HTMLAppTextareaElement;
  };

  interface HTMLAppToolboxElement extends Components.AppToolbox, HTMLStencilElement {}
  var HTMLAppToolboxElement: {
    prototype: HTMLAppToolboxElement;
    new (): HTMLAppToolboxElement;
  };

  interface HTMLAppTosElement extends Components.AppTos, HTMLStencilElement {}
  var HTMLAppTosElement: {
    prototype: HTMLAppTosElement;
    new (): HTMLAppTosElement;
  };

  interface HTMLAppTranslateElement extends Components.AppTranslate, HTMLStencilElement {}
  var HTMLAppTranslateElement: {
    prototype: HTMLAppTranslateElement;
    new (): HTMLAppTranslateElement;
  };

  interface HTMLContentGraphicElement extends Components.ContentGraphic, HTMLStencilElement {}
  var HTMLContentGraphicElement: {
    prototype: HTMLContentGraphicElement;
    new (): HTMLContentGraphicElement;
  };

  interface HTMLLazyImgElement extends Components.LazyImg, HTMLStencilElement {}
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };

  interface HTMLOpenForgeAppElement extends Components.OpenForgeApp, HTMLStencilElement {}
  var HTMLOpenForgeAppElement: {
    prototype: HTMLOpenForgeAppElement;
    new (): HTMLOpenForgeAppElement;
  };
  interface HTMLElementTagNameMap {
    'app-about': HTMLAppAboutElement;
    'app-blog': HTMLAppBlogElement;
    'app-blog-card': HTMLAppBlogCardElement;
    'app-blog-content': HTMLAppBlogContentElement;
    'app-blog-featured': HTMLAppBlogFeaturedElement;
    'app-blog-index': HTMLAppBlogIndexElement;
    'app-blog-post': HTMLAppBlogPostElement;
    'app-carousel-indicators': HTMLAppCarouselIndicatorsElement;
    'app-case-study': HTMLAppCaseStudyElement;
    'app-contact': HTMLAppContactElement;
    'app-cta': HTMLAppCtaElement;
    'app-detailed-service': HTMLAppDetailedServiceElement;
    'app-footer': HTMLAppFooterElement;
    'app-home': HTMLAppHomeElement;
    'app-img': HTMLAppImgElement;
    'app-input': HTMLAppInputElement;
    'app-members': HTMLAppMembersElement;
    'app-nav-header': HTMLAppNavHeaderElement;
    'app-opportunities': HTMLAppOpportunitiesElement;
    'app-radio': HTMLAppRadioElement;
    'app-resources': HTMLAppResourcesElement;
    'app-service-level-agreement': HTMLAppServiceLevelAgreementElement;
    'app-services': HTMLAppServicesElement;
    'app-slider': HTMLAppSliderElement;
    'app-team-landing': HTMLAppTeamLandingElement;
    'app-textarea': HTMLAppTextareaElement;
    'app-toolbox': HTMLAppToolboxElement;
    'app-tos': HTMLAppTosElement;
    'app-translate': HTMLAppTranslateElement;
    'content-graphic': HTMLContentGraphicElement;
    'lazy-img': HTMLLazyImgElement;
    'open-forge-app': HTMLOpenForgeAppElement;
  }
}

declare namespace LocalJSX {
  interface AppAbout extends JSXBase.HTMLAttributes<HTMLAppAboutElement> {}
  interface AppBlog extends JSXBase.HTMLAttributes<HTMLAppBlogElement> {
    'butter'?: any;
  }
  interface AppBlogCard extends JSXBase.HTMLAttributes<HTMLAppBlogCardElement> {
    'blogPost'?: BlogPost;
  }
  interface AppBlogContent extends JSXBase.HTMLAttributes<HTMLAppBlogContentElement> {
    'blogPost'?: BlogPost;
  }
  interface AppBlogFeatured extends JSXBase.HTMLAttributes<HTMLAppBlogFeaturedElement> {
    'blogPost'?: BlogPost;
  }
  interface AppBlogIndex extends JSXBase.HTMLAttributes<HTMLAppBlogIndexElement> {
    'butter'?: any;
  }
  interface AppBlogPost extends JSXBase.HTMLAttributes<HTMLAppBlogPostElement> {
    'butter'?: any;
    'history'?: RouterHistory;
    'match'?: MatchResults;
    'preRenderBlogPost'?: BlogPost;
  }
  interface AppCarouselIndicators extends JSXBase.HTMLAttributes<HTMLAppCarouselIndicatorsElement> {
    'activeIndex'?: string;
  }
  interface AppCaseStudy extends JSXBase.HTMLAttributes<HTMLAppCaseStudyElement> {}
  interface AppContact extends JSXBase.HTMLAttributes<HTMLAppContactElement> {
    'errorIconStyles'?: { display: string; marginBottom: string; paddingRight: string; };
  }
  interface AppCta extends JSXBase.HTMLAttributes<HTMLAppCtaElement> {}
  interface AppDetailedService extends JSXBase.HTMLAttributes<HTMLAppDetailedServiceElement> {
    'history'?: RouterHistory;
    'match'?: MatchResults;
  }
  interface AppFooter extends JSXBase.HTMLAttributes<HTMLAppFooterElement> {}
  interface AppHome extends JSXBase.HTMLAttributes<HTMLAppHomeElement> {
    'butter'?: any;
    'history'?: RouterHistory;
  }
  interface AppImg extends JSXBase.HTMLAttributes<HTMLAppImgElement> {
    'alt'?: string;
    'fit'?: boolean;
    'preLoad'?: boolean;
    'src'?: string;
  }
  interface AppInput extends JSXBase.HTMLAttributes<HTMLAppInputElement> {
    'id'?: string;
    'label'?: string;
    'maxlength'?: string;
    'name'?: string;
    'onValueChange'?: (event: CustomEvent<any>) => void;
    'placeholder'?: string;
    'required'?: boolean;
    'type'?: string;
  }
  interface AppMembers extends JSXBase.HTMLAttributes<HTMLAppMembersElement> {
    'members'?: any[];
  }
  interface AppNavHeader extends JSXBase.HTMLAttributes<HTMLAppNavHeaderElement> {}
  interface AppOpportunities extends JSXBase.HTMLAttributes<HTMLAppOpportunitiesElement> {
    'errorIconStyles'?: { display: string; marginBottom: string; paddingRight: string; };
    'history'?: RouterHistory;
    'match'?: MatchResults;
  }
  interface AppRadio extends JSXBase.HTMLAttributes<HTMLAppRadioElement> {
    'label'?: string;
    'name'?: string;
    'onValueChange'?: (event: CustomEvent<any>) => void;
    'required'?: boolean;
    'value'?: string;
  }
  interface AppResources extends JSXBase.HTMLAttributes<HTMLAppResourcesElement> {
    'errorIconStyles'?: { display: string; marginBottom: string; paddingRight: string; };
    'history'?: RouterHistory;
    'match'?: MatchResults;
  }
  interface AppServiceLevelAgreement extends JSXBase.HTMLAttributes<HTMLAppServiceLevelAgreementElement> {}
  interface AppServices extends JSXBase.HTMLAttributes<HTMLAppServicesElement> {}
  interface AppSlider extends JSXBase.HTMLAttributes<HTMLAppSliderElement> {
    'label'?: string;
    'name'?: string;
    'onValueChange'?: (event: CustomEvent<any>) => void;
  }
  interface AppTeamLanding extends JSXBase.HTMLAttributes<HTMLAppTeamLandingElement> {
    'history'?: RouterHistory;
    'match'?: MatchResults;
  }
  interface AppTextarea extends JSXBase.HTMLAttributes<HTMLAppTextareaElement> {
    'id'?: string;
    'label'?: string;
    'maxlength'?: string;
    'name'?: string;
    'onValueChange'?: (event: CustomEvent<any>) => void;
    'placeholder'?: string;
    'required'?: boolean;
    'rows'?: number;
  }
  interface AppToolbox extends JSXBase.HTMLAttributes<HTMLAppToolboxElement> {}
  interface AppTos extends JSXBase.HTMLAttributes<HTMLAppTosElement> {}
  interface AppTranslate extends JSXBase.HTMLAttributes<HTMLAppTranslateElement> {
    'key'?: string;
    'params'?: {};
  }
  interface ContentGraphic extends JSXBase.HTMLAttributes<HTMLContentGraphicElement> {
    'imgUrl'?: string;
    'preLoadImg'?: boolean;
    'reverse'?: boolean;
  }
  interface LazyImg extends JSXBase.HTMLAttributes<HTMLLazyImgElement> {
    'alt'?: string;
    'onLazyImgloaded'?: (event: CustomEvent<HTMLImageElement>) => void;
    'src'?: string;
    'width'?: number;
  }
  interface OpenForgeApp extends JSXBase.HTMLAttributes<HTMLOpenForgeAppElement> {}

  interface IntrinsicElements {
    'app-about': AppAbout;
    'app-blog': AppBlog;
    'app-blog-card': AppBlogCard;
    'app-blog-content': AppBlogContent;
    'app-blog-featured': AppBlogFeatured;
    'app-blog-index': AppBlogIndex;
    'app-blog-post': AppBlogPost;
    'app-carousel-indicators': AppCarouselIndicators;
    'app-case-study': AppCaseStudy;
    'app-contact': AppContact;
    'app-cta': AppCta;
    'app-detailed-service': AppDetailedService;
    'app-footer': AppFooter;
    'app-home': AppHome;
    'app-img': AppImg;
    'app-input': AppInput;
    'app-members': AppMembers;
    'app-nav-header': AppNavHeader;
    'app-opportunities': AppOpportunities;
    'app-radio': AppRadio;
    'app-resources': AppResources;
    'app-service-level-agreement': AppServiceLevelAgreement;
    'app-services': AppServices;
    'app-slider': AppSlider;
    'app-team-landing': AppTeamLanding;
    'app-textarea': AppTextarea;
    'app-toolbox': AppToolbox;
    'app-tos': AppTos;
    'app-translate': AppTranslate;
    'content-graphic': ContentGraphic;
    'lazy-img': LazyImg;
    'open-forge-app': OpenForgeApp;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


